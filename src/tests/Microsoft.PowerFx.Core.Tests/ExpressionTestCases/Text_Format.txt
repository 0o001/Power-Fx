>> Text(0, "mm/dd/yy") 
"12/30/99"

>> Text(0, "mmm mm/dd/yy") 
"Dec 12/30/99"

>> Text(0, "mmmm mm/dd/yy") 
"December 12/30/99"

>> Text(0, "ddd mm/dd/yy") 
"Sat 12/30/99"

>> Text(0, "dddd mm/dd/yy") 
"Saturday 12/30/99"

>> Text(0, "dddd, mmm dd, yy") 
"Saturday, Dec 30, 99"

>> Text(0, "dddd, mmm dd, yyy") 
"Saturday, Dec 30, 1899"

>> Text(0, "dddd, mmm dd, yyyy") 
"Saturday, Dec 30, 1899"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "dddd, mmm dd, yyy") 
"Friday, Jun 03, 1983"

>> Text(30470, "dddd, mmm dd, yyy") 
"Friday, Jun 03, 1983"

>> Text(0, "'longdate'") 
"Saturday, December 30, 1899"

>> Text(0, "'shortdate'") 
"12/30/1899"

>> Text(0, "longdate") 
"long30ate"

>> Text(0, "shortdate") 
"00ort30ate"

>> Text(0, "short day") 
"00ort 30a99"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "dddd, mmm "" dd, yyy") 
"Friday, Jun "" 03, 1983"

>> Text(30470, "DDDD, MMM "" DD, YYY") 
"Friday, Jun "" 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "dddd, mmm """" dd, yyy") 
"Friday, Jun  03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "dddd, mmm"""" dd, yyy") 
"Friday, Jun 03, 1983"

>> Text(30470, "DDDD, MMM"""" DD, YYY") 
"Friday, Jun 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "dddd, mmm""""dd, yyy") 
"Friday, Jun03, 1983"

>> Text(30470, "DDDD, MMM""""DD, YYY") 
"Friday, Jun03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), """d"" dddd, mmm dd, yyy") 
"d Friday, Jun 03, 1983"

>> Text(30470, """D"" DDDD, MMM DD, YYY") 
"D Friday, Jun 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "dddd, mmm ""d"" dd, yyy") 
"Friday, Jun d 03, 1983"

>> Text(30470, "DDDD, MMM ""D"" DD, YYY") 
"Friday, Jun D 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "DdDd, MmM ""D"" dD, yYy") 
"Friday, Jun D 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "dddd, mmm dd, yyy ""d""") 
"Friday, Jun 03, 1983 d"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "DDDD, MMM DD, YYY ""D""") 
"Friday, Jun 03, 1983 D"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "dddd, mmm ""d."" dd, yyy") 
"Friday, Jun d. 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "dddd, mmm ""yyy"" dd, yyy") 
"Friday, Jun yyy 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "DDDD, MMM ""YYY"" DD, YYY") 
"Friday, Jun YYY 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "dddd, mmm ""yyy"" dd, ""mmm"" yyy") 
"Friday, Jun yyy 03, mmm 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), """ddd"" dddd, mmm ""yyy"" dd, ""mmm"" yyy") 
"ddd Friday, Jun yyy 03, mmm 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), """ddd"" DDdd, mMM ""yyy"" Dd, ""mmm"" yYY") 
"ddd Friday, Jun yyy 03, mmm 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "dddd, mmm ""carrymeforward"" dd, yyy") 
"Friday, Jun carrymeforward 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "DDDD, MMM ""carrymeforward"" DD, YYY") 
"Friday, Jun carrymeforward 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "dddd, mmm""carrymeforward""dd, ""mmm"" yyy") 
"Friday, Juncarrymeforward03, mmm 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "DDDD, MMM""carrymeforward""DD, ""MMM"" YYY") 
"Friday, Juncarrymeforward03, MMM 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "hh:mm:ss") 
"02:53:09"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "HH:MM:SS") 
"02:53:09"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "Hh:Mm:Ss") 
"02:53:09"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "hH:mM:sS") 
"02:53:09"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "hh:mm:s") 
"02:53:9"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "HH:MM:S") 
"02:53:9"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "hh:mm") 
"02:53"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "HH:MM") 
"02:53"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "mm:ss") 
"53:09"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "MM:SS") 
"53:09"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "mm:hh") 
"06:02"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "MM:HH") 
"06:02"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "hh:yyyy:mm") 
"02:1983:06"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "HH:YYYY:MM") 
"02:1983:06"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "ha/p") 
"2a"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "HA/P") 
"2a"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "hha/p") 
"02a"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "HHA/P") 
"02a"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "hAM/PM") 
"2AM"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "HAM/PM") 
"2AM"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "hhAM/PM") 
"02AM"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "HHAM/PM") 
"02AM"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "h:mm a/p") 
"2:53 a"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "H:MM a/p") 
"2:53 a"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "hh:mm a/p") 
"02:53 a"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "HH:MM a/p") 
"02:53 a"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "h:mm AM/PM") 
"2:53 AM"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "H:MM AM/PM") 
"2:53 AM"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "hh:mm AM/PM") 
"02:53 AM"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "HH:MM AM/PM") 
"02:53 AM"

>> Text(DateTime(2013, 6, 19, 10, 48, 38, 100), "hh:mm:ss AM/PM") 
"10:48:38 AM"

>> Text(DateTime(2013, 6, 19, 10, 48, 38, 100), "HH:MM:SS AM/PM") 
"10:48:38 AM"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "H:mm:ss AM/PM") 
"2:53:09 AM"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "HH:mm:ss AM/PM") 
"02:53:09 AM"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "HHH:mm:ss AM/PM") 
"02:53:09 AM"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 0), "HHHHHH:mm:ss AM/PM") 
"02:53:09 AM"

>> Text(DateTime(2013, 6, 19, 10, 48, 38, 100), "H:mm:ss AM/PM") 
"10:48:38 AM"

>> Text(DateTime(2013, 6, 19, 10, 48, 38, 100), "HH:mm:ss AM/PM") 
"10:48:38 AM"

>> Text(DateTime(2013, 6, 19, 10, 48, 38, 100), "HHH:mm:ss AM/PM") 
"10:48:38 AM"

>> Text(DateTime(2013, 6, 19, 10, 48, 38, 100), "HHHHHH:mm:ss AM/PM") 
"10:48:38 AM"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "hh:mm:ss.fff") 
"02:53:09.fff"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "hh:mm:ss.000") 
"02:53:09.123"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "hh:mm:ss.ff") 
"02:53:09.ff"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "hh:mm:ss.00") 
"02:53:09.12"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "hh:mm:ss.f") 
"02:53:09.f"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "hh:mm:ss.0") 
"02:53:09.1"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 13), "hh:mm:ss.fff") 
"02:53:09.fff"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 13), "hh:mm:ss.000") 
"02:53:09.013"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 13), "hh:mm:ss.ff") 
"02:53:09.ff"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 13), "hh:mm:ss.00") 
"02:53:09.01"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 13), "hh:mm:ss.f") 
"02:53:09.f"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 13), "hh:mm:ss.0") 
"02:53:09.0"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 3), "hh:mm:ss.fff") 
"02:53:09.fff"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 3), "hh:mm:ss.000") 
"02:53:09.003"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 3), "hh:mm:ss.ff") 
"02:53:09.ff"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 3), "hh:mm:ss.00") 
"02:53:09.00"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 3), "hh:mm:ss.f") 
"02:53:09.f"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 3), "hh:mm:ss.0") 
"02:53:09.0"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "mm:ss.fff") 
"53:09.fff"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "mm:ss.000") 
"53:09.123"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "mm:ss.ff") 
"53:09.ff"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "mm:ss.00") 
"53:09.12"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "mm:ss.f") 
"53:09.f"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "mm:ss.0") 
"53:09.1"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 13), "mm:ss.fff") 
"53:09.fff"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 13), "mm:ss.000") 
"53:09.013"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 13), "mm:ss.ff") 
"53:09.ff"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 13), "mm:ss.00") 
"53:09.01"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 13), "mm:ss.f") 
"53:09.f"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 13), "mm:ss.0") 
"53:09.0"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 3), "mm:ss.fff") 
"53:09.fff"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 3), "mm:ss.000") 
"53:09.003"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 3), "mm:ss.ff") 
"53:09.ff"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 3), "mm:ss.00") 
"53:09.00"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 3), "mm:ss.f") 
"53:09.f"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 3), "mm:ss.0") 
"53:09.0"

>> Text(DateTime(1983, 6, 3, 18, 0, 0, 0), "0") 
"30471"

>> Text(DateTime(1983, 6, 3, 18, 0, 0, 0), "0.00") 
"30470.75"

>> Text(423456789013, "0")
"423456789013"

>> Text(423456789003, "0")
"423456789003"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "'longdatetime'") 
"Thursday, January 1, 1970 2:32:25 PM"

>> Text(33333.75, "'longdatetime'") 
"Friday, April 5, 1991 6:00:00 PM"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "'shortdatetime'") 
"1/1/1970 2:32 PM"

>> Text(33333.75, "'shortdatetime'") 
"4/5/1991 6:00 PM"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "'longdatetime24'") 
"Thursday, January 1, 1970 14:32:25"

>> Text(33333.75, "'longdatetime24'") 
"Friday, April 5, 1991 18:00:00"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "'shortdatetime24'") 
"1/1/1970 14:32"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "'longtime24'") 
"14:32:25"

>> Text(0.6875, "'longtime24'") 
"16:30:00"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "'shorttime24'") 
"14:32"

>> Text(0.6875, "'shorttime24'") 
"16:30"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "'longtime'") 
"2:32:25 PM"

>> Text(12345.6875, "'longtime'") 
"4:30:00 PM"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "'shorttime'") 
"2:32 PM"

>> Text(33333.6875, "'shorttime'") 
"4:30 PM"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "longdatetime") 
"long1ateti1e"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "shortdatetime") 
"2514ort1ateti1e"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "longdatetime24") 
"long1ateti1e24"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "shortdatetime24") 
"2514ort1ateti1e24"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "longtime24") 
"longti1e24"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "shorttime24") 
"2514ortti32e24"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "longtime") 
"longti1e"

>> Text(DateTime(1970, 1, 1, 14, 32, 25, 678), "shorttime") 
"2514ortti32e"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), """h"" dddd, mmm dd, yyy") 
"h Friday, Jun 03, 1983"

>> Text(30470, """h"" dddd, mmm dd, yyy") 
"h Friday, Jun 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "dddd, mmm ""h"" dd, yyy") 
"Friday, Jun h 03, 1983"

>> Text(30470, "dddd, mmm ""h"" dd, yyy") 
"Friday, Jun h 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "dddd, mmm dd, yyy ""h""") 
"Friday, Jun 03, 1983 h"

>> Text(30470, "dddd, mmm dd, yyy ""h""") 
"Friday, Jun 03, 1983 h"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "dddd, mmm ""h."" dd, yyy") 
"Friday, Jun h. 03, 1983"

>> Text(30470, "dddd, mmm ""h."" dd, yyy") 
"Friday, Jun h. 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "dddd, mmm ""hh:mm"" dd, yyy") 
"Friday, Jun hh:mm 03, 1983"

>> Text(30470, "dddd, mmm ""hh:mm"" dd, yyy") 
"Friday, Jun hh:mm 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "dddd, mmm ""hh.m"" dd, ""mm.f"" yyy") 
"Friday, Jun hh.m 03, mm.f 1983"

>> Text(30470, "dddd, mmm ""hh.m"" dd, ""mm.f"" yyy") 
"Friday, Jun hh.m 03, mm.f 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), """hh"" dddd, mmm ""mm"" dd, ""fff"" yyy") 
"hh Friday, Jun mm 03, fff 1983"

>> Text(30470, """hh"" dddd, mmm ""mm"" dd, ""fff"" yyy") 
"hh Friday, Jun mm 03, fff 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "dddd, mmm ""carrymefforward"" dd, yyy") 
"Friday, Jun carrymefforward 03, 1983"

>> Text(30470, "dddd, mmm ""carrymefforward"" dd, yyy") 
"Friday, Jun carrymefforward 03, 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "dddd, mmm""carrymefforward""dd, ""fff"" yyy") 
"Friday, Juncarrymefforward03, fff 1983"

>> Text(30470, "dddd, mmm""carrymefforward""dd, ""fff"" yyy") 
"Friday, Juncarrymefforward03, fff 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "mmm ""[some*]"" dd ""(de)+"" yyyy") 
"Jun [some*] 03 (de)+ 1983"

>> Text(30470, "mmm ""[some*]"" dd ""(de)+"" yyyy") 
"Jun [some*] 03 (de)+ 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "mmm ([""][^""]*[""]) dd yyyy") 
"Jun ([][^]*[""]) 03 1983"

>> Text(30470, "mmm ([""][^""]*[""]) dd yyyy") 
"Jun ([][^]*[""]) 03 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "mmm ""([""][^""]*[""]) dd yyyy") 
"Jun ([][^]*[]) 03 1983"

>> Text(30470, "mmm ""([""][^""]*[""]) dd yyyy") 
"Jun ([][^]*[]) 03 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "mmm ""([""][^""]*[""])"" dd yyyy") 
"Jun ([][^]*[])"" 03 1983"

>> Text(30470, "mmm ""([""][^""]*[""])"" dd yyyy") 
"Jun ([][^]*[])"" 03 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "mmm ""[de]+de"" dd yyyy") 
"Jun [de]+de 03 1983"

>> Text(30470, "mmm ""[de]+de"" dd yyyy") 
"Jun [de]+de 03 1983"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "yyyy-mm-dd HH:mm:ss.fff") 
"1983-06-03 02:53:09.fff"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "yyyy-mm-dd HH:mm:ss.000") 
"1983-06-03 02:53:09.123"

>> Text(30470.01953125, "yyyy-mm-dd HH:mm:ss.000") 
"1983-06-03 00:28:07.500"

>> Text(DateTime(1983, 6, 3, 2, 53, 9, 123), "YYYY-MM-DD HH:MM:SS.000") 
"1983-06-03 02:53:09.123"

>> Text(30470.01953125, "YYYY-MM-DD HH:MM:SS.000") 
"1983-06-03 00:28:07.500"

>> Text(1, 
  "mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm")
Error({Kind:ErrorKind.InvalidArgument})

>> Text(1, "00.00 dd-mm-yyyy")
Errors: Error 0-27: The function 'Text' has some invalid arguments.|Warning 8-26: Incorrect format specifier for 'Text'.

>> Text(Time(2, 53, 9, 3), "mm:ss.00") 
"53:09.00"

>> Text(Time(2, 53, 9, 123), "hh:mm:ss.00") 
"02:53:09.12"

>> Text(Time(18, 0, 0), "0.00")
"0.75"

>> Text(Time(14, 32, 25, 678), "'shorttime24'") 
"14:32"

>> Text(Time(14, 32, 25, 678), DateTimeFormat.ShortTime24)
"14:32"

>> Text(Time(14, 32, 25, 678), "'shorttime'") 
"2:32 PM"

>> Text(Time(14, 32, 25, 678), DateTimeFormat.ShortTime) 
"2:32 PM"

>> Text(Date(1983, 6, 3), "dddd, mmm dd, yyy") 
"Friday, Jun 03, 1983"

>> Text(Date(1983, 6, 3), "dddd, mmm "" dd, yyy") 
"Friday, Jun "" 03, 1983"

>> Text(Date(1970, 1, 1), "'shortdate'") 
"1/1/1970"

>> Text(Date(1970, 1, 1), DateTimeFormat.ShortDate) 
"1/1/1970"

>> Text(Date(1970, 1, 1), "'shortdatetime'") 
"1/1/1970 12:00 AM"

>> Text(Date(1970, 1, 1), DateTimeFormat.ShortDateTime) 
"1/1/1970 12:00 AM"

>> Text(Date(1970, 1, 1), "'shortdatetime24'") 
"1/1/1970 0:00"

>> Text(Date(1970, 1, 1), DateTimeFormat.ShortDateTime24) 
"1/1/1970 0:00"

>> Text(Date(1970, 1, 1), "'longdate'") 
"Thursday, January 1, 1970"

>> Text(Date(1970, 1, 1), DateTimeFormat.LongDate) 
"Thursday, January 1, 1970"

>> Text(Date(1970, 1, 1), "'longdatetime'") 
"Thursday, January 1, 1970 12:00:00 AM"

>> Text(Date(1970, 1, 1), DateTimeFormat.LongDateTime) 
"Thursday, January 1, 1970 12:00:00 AM"

>> Text(Date(1970, 1, 1), "'longdatetime24'") 
"Thursday, January 1, 1970 0:00:00"

>> Text(Date(1970, 1, 1), DateTimeFormat.LongDateTime24)
"Thursday, January 1, 1970 0:00:00"

>> With({format:"0.00 dd/mm/yyyy"},Text(123, format))
Error({Kind:ErrorKind.InvalidArgument})

>> Text(DateTime(2023,1,3,9,23,45,678), "yyyy-mm-dd hh:mm:ss.000")
"2023-01-03 09:23:45.678"

>> Text(DateTime(2023,1,3,9,23,45,678), "yyyy-mm-dd hh:mm:ss.0000")
"2023-01-03 09:23:45.6780"

>> Text(DateTime(2023,1,3,9,23,45,678), "yyyy-mm-dd hh:mm:ss.00000")
"2023-01-03 09:23:45.67800"

>> Text(DateTime(2023,1,3,9,23,45,678), "yyyy-mm-dd hh:mm:ss.000000")
"2023-01-03 09:23:45.678000"

>> Text(DateTime(2023,1,3,9,23,45,678), "yyyy-mm-dd hh:mm:ss.0000000")
"2023-01-03 09:23:45.6780000"

>> Text(DateTime(2023,1,3,9,23,45,678), "yyyy-mm-dd hh:mm:ss.00000000")
Error({Kind:ErrorKind.InvalidArgument})

>> Text(30470.01953125, "YYYY-MM-DD HH:MM:SS.0000") 
"1983-06-03 00:28:07.5000"

>> Text(30470.01953125, "YYYY-MM-DD HH:MM:SS.00000") 
"1983-06-03 00:28:07.50000"

>> Text(30470.01953125, "YYYY-MM-DD HH:MM:SS.000000") 
"1983-06-03 00:28:07.500000"

>> Text(30470.01953125, "YYYY-MM-DD HH:MM:SS.0000000") 
"1983-06-03 00:28:07.5000000"

>> Text(30470.01953125, "YYYY-MM-DD HH:MM:SS.00000000") 
Error({Kind:ErrorKind.InvalidArgument})

// Number 4492800 exceeds the max days that DateTime.AddDays can take.
>> Text(4492800,DateTimeFormat.LongDate)
Error({Kind:ErrorKind.InvalidArgument})

// C# interpreter can handle up to 7 decimals after the second
>> Text(DateTimeValue("2023-01-03 00:01:02.3456789"), "yyyy-mm-dd hh:mm:ss.0000000")
"2023-01-03 00:01:02.3456789"

// ******** Language Code and Numeric Format String ********

>> Text(1234.5678, "[$-fr-FR]# ##0,00", "en-US")
"1,234.57"

>> Text(1234.5678, "[$-fr-FR]# ##0,00", "vi-VI")
"1.234,57"

>> Text(1234.5678, "[$-en-US]#,##0.00", "en-US")
"1,234.57"

>> Text(1234.5678, "[$-pt-BR]#.##0,00", "en-US")
"1,234.57"

>> Text(1234.5678, "[$-pt-BR]#.##0,00", "fr-FR")
"1 234,57"

>> Text(1234.5678, "[$-en-US]#,##0.00", "pt-BR")
"1.234,57"

>> Text(1234.5678,"[$-en-US]0 # # # !!!", "en-US")
"1 2 3 5 !!!"

// The thousands separator in the fi-FI locale is the no-break space (U+00A0)
>> Text(12345.6789, $"[$-fi-FI]#{Char(160)}##0.00", "en-US")
"12,345.68"

>> Text(12345.6789, $"[$-fi-FI]#{Char(160)}##0.00", "fi-FI")
"12 345,68"

// The thousands separator in the fr-FR locale is the narrow no-break space (U+202F)
>> Text(12345.6789, $"[$-fr-FR]#{ParseJSON("""\u202F""")}##0.00", "en-US")
"12,345.68"

>> Text(12345.6789, $"[$-fr-FR]#{ParseJSON("""\u202F""")}##0.00", "fr-FR")
"12 345,68"

>> Text(1234.5678, "[$-en-US]", "en-US")
"1234.5678"

>> Text(1234.5678, "[$-fr-FR]", "fr-FR")
"1234,5678"

>> Text(1234.5678, "[$-fr-FR]", "en-US")
"1234.5678"

>> Text(1234.5678, "# ##0,00", "fr-FR")
" 1 235"

>> Text(1234.5678, "# ##0,00")
" 1,235"

>> Text(1234.5678, "[$-  fr-FR  ]# ##0,00", "vi-VI")
"1.234,57"

>> Text(1234.5678, "[$-fr-FR  ]# ##0,00", "vi-VI")
"1.234,57"

>> Text(1234.5678, "[$-  fr-FR]# ##0,00", "vi-VI")
"1.234,57"

>> Text(1234.5678, "[$-fr-FR][# ##0,00]", "vi-VI")
"[1.234,57]"

>> Text(1234.5678, "$-fr-FR] # ##0,00", "vi-VI")
"$-fr-FR]  1.235"

>> Text(1234.5678, "$-fr-FR][ # ##0,00", "vi-VI")
"$-fr-FR][  1.235"

>> Text(1234.5678, "-fr-FR # ##0,00", "vi-VI")
"-fr-FR  1.235"

>> Text(1234.5678, "fr-FR # ##0,00", "vi-VI")
"fr-FR  1.235"

>> Text(1234.5678, "$[-fr-FR] # ##0,00", "vi-VI")
"$[-fr-FR]  1.235"

>> Text(1234.5678, "$-[fr-FR] # ##0,00", "vi-VI")
"$-[fr-FR]  1.235"

>> Text(1234.5678, "[$-fr-FR][$-fr-FR# ##0,00]", "vi-VI")
"[$-fr-FR1.234,57]"

>> Text(1234.5678, "]$-fr-FR[ # ##0,00", "vi-VI")
"]$-fr-FR[  1.235"

>> Text(1234.5678, "{$-fr-FR} # ##0,00", "vi-VI")
"{$-fr-FR}  1.235"

>> Text(1234.5678, "[$ # ##0,00", "vi-VI")
"[$  1.235"

>> Text(1234.5678, "[$] # ##0,00", "vi-VI")
"[$]  1.235"

>> Text(1234.5678, "][-$ # ##0,00", "vi-VI")
"][-$  1.235"

// If have wrong format string, throw error
>> Text(1234.5678,"abc[$-en-US]0 # # # !!!", "en-US")
Errors: Error 0-50: The function 'Text' has some invalid arguments.|Warning 15-40: Incorrect format specifier for 'Text'.

>> Text(1234.5678, "mnk  [$-fr-FR] # ##0,00"   , "vi-VI")
Errors: Error 0-54: The function 'Text' has some invalid arguments.|Warning 16-41: Incorrect format specifier for 'Text'.

// If does not have valid language code, throw error
>> Text(1234.5678, "[$-a]0,0", "en-US")
Error({Kind:ErrorKind.BadLanguageCode})

>> Text(1234.5678, "[$-fr - FR]# ##0,00", "vi-VI")
Error({Kind:ErrorKind.BadLanguageCode})

>> Text(1234.5678, "[$-fr-FR #] ##0,00", "vi-VI")
Error({Kind:ErrorKind.BadLanguageCode})

>> Text(1234.5678, "[$-fr-FR # ##0,00]", "vi-VI")
Error({Kind:ErrorKind.BadLanguageCode})

>> Text(1234.5678, "[$-fr-FR,en-US] # ##0,00", "vi-VI")
Error({Kind:ErrorKind.BadLanguageCode})

>> Text(1234.5678, "[$-fr-FR # ##]0,00", "vi-VI")
Error({Kind:ErrorKind.BadLanguageCode})
﻿// Text function consistency with Excel
//  
// We do not support all the formats that Excel does.  For the moment, we are blocking several patterns that 
// we may want to support in the future:
//   1. ? - Whitespace padding digit (same as 0 with a space instead of a 0)
//   2. #/ 0/ ?/ - Fractions (/ is too common to ban outright, only blocked if after a number placeholder)
//   3. [] with anything other than [@-ll-RR] - Conditionals, currency symbols, output locale, elapsed time
//   4. _ - Whitespace padding
//   5. * - Alignment
//   6. third ; - Fourth string based optional section
//   7. "General" - General keyword (case insensitive)
//   8. @ - Embeddable version of "General"
//   9. : with anything other than time placeholders - Colon
// All of these patterns can be embedded with escaping (backslash or double quotes)

// Basic usage
>> Text( 1234567.1234567, "###" )
"1234567"

>> Text( 1234567.1234567, "000" )
"1234567"

>> Text( 1234567.1234567, "###.###" )
"1234567.123"

>> Text( 1234567.1234567, "#,###.###" )
"1,234,567.123"

>> Text( 1234567.1234567, "000,000,000" )
"001,234,567"

>> Text( -1234567.1234567, "###" )
"-1234567"

>> Text( -1234567.1234567, "000" )
"-1234567"

>> Text( -1234567.1234567, "###.###" )
"-1234567.123"

>> Text( -1234567.1234567, "#,###.###" )
"-1,234,567.123"

>> Text( -1234567.1234567, "000,000,000" )
"-001,234,567"

>> Text( 0, "###" )
""

>> Text( 0, "000" )
"000"

>> Text( 0, "###.###" )
""

>> Text( 0, "#,###.###" )
""

>> Text( 0, "000,000,000" )
"000,000,000"

>> Text( 1234.567, "#,##0.00" )
"1,234.57"

>> Text( 1, "00000" )
"00001"

>> Text( 12, "00000" )
"00012"

>> Text( 123, "00000" )
"00123"

>> Text( 1234, "00000" )
"01234"

>> Text( 12345, "00000" )
"12345"

>> Text( 1234567.1234567, "0000000000" )
"0001234567"

>> Text( 1234567.1234567, "##########" )
"1234567"

// Escape with backslash.
>> Text( 1234567.1234567, "\#,###.###" )
"#,1234567.123"

>> Text( 1234567.1234567, "\\#,###.###" )
"\1,234,567.123"

>> Text( 1234567.1234567, "\##,###.###" )
"#1,234,567.123"

>> Text( 1234567.1234567, "##\,###.###" )
"1234,567.123"

>> Text( 1234567.1234567, "\""#\""" )
"""1234567"""

>> Text( 123.456, "\m\m\m ddd yyy" )
"mmm Wed 1900"

>> Text( 123.456, "mm\m ddd yyy" )
"05m Wed 1900"

>> Text( 123.456, "mmm d\dd yyy" )
"May 2d2 1900"

>> Text( 123.456, "mm\m ddd \y\yy" )
"05m Wed yy00"

>> Text( 123.456, "\m\m\m\-ddd\-yyy" )
"mmm-Wed-1900"

// Escape with double quoted string.
>> Text( 1234567.1234567, """0000""" )
"0000"

>> Text( 1234567.1234567, "0""00""0" )
"123456007"

>> Text( 1234567.1234567, """#"",###.###" )
"#,1234567.123"

>> Text( 1234567.1234567, ",###.###" )
",1234567.123"

>> Text( 1234567.1234567, """#""#,###.###" )
"#1,234,567.123"

>> Text( 1234567.1234567, """0#,#0""0" )
"0#,#01234567"

// Can't insert a double quote in this manner, must use backslash.
>> Text( 1234567.1234567, """""""""#" )
"1234567"

>> Text( 1234567.1234567, "\""0.0\""" )
"""1234567.1"""

>> Text( 123.456, "mmm ddd yyy" )
"May Wed 1900"

>> Text( 123.456, """mmm"" ddd yyy" )
"mmm Wed 1900"

>> Text( 123.456, "mmm ""ddd"" ""yyy""" )
"May ddd yyy"

>> Text( 123.456, "mm""m"" ddd yyy" )
"05m Wed 1900"

>> Text( 123.456, "mmm ddd yyy ""year""" )
"May Wed 1900 year"

>> Text( 123.456, "mmm ddd yyy ""date""" )
"May Wed 1900 date"

>> Text( 123.456, "mmm ""-"" ddd ""-"" yyy" )
"May - Wed - 1900"

>> Text( 123.456, "mmm""/""ddd""/""yyy" )
"May/Wed/1900"

// Single quote.  Has a meaning in C# (alternative to double quotes) but does not in Excel/Power Fx, treated as a normal character.
>> Text( 1234567.1234567, "'0000" )
"'1234567"

>> Text( 1234567.1234567, "000'00" )
"12345'67"

>> Text( 1234567.1234567, "000'00.00'000" )
"12345'67.12'346"

>> Text( 1234567.1234567, "'0000'" )
"'1234567'"

>> Text( 1234567.1234567, "0'00'0" )
"1234'56'7"

>> Text( 1234567.1234567, "'#'###.###" )
"'1234'567.123"

>> Text( 1234567.1234567, "'#,'###.###" )
"'1,234,'567.123"

>> Text( 1234567.1234567, "'##,'###.###" )
"'1,234,'567.123"

>> Text( 1234567.1234567, "'0#,#0'0" )
"'1,234,56'7"

>> Text( 1234567.1234567, "'''#" )
"'''1234567"

>> Text( 1234567.1234567, "'''''#" )
"'''''1234567"

>> Text( 1234567.1234567, "\''#" )
"''1234567"

>> Text( 1234567.1234567, "\'0.0\'" )
"'1234567.1'"

>> Text( 123.456, "'mmm' ddd yyy" )
"'May' Wed 1900"

>> Text( 123.456, "'mmm ddd yyy'" )
"'May Wed 1900'"

>> Text( 123.456, "'mmm ddd yyy" )
"'May Wed 1900"

>> Text( 123.456, "mmm'ddd'yyy" )
"May'Wed'1900"

>> Text( 123.456, "mmm''ddd'yyy" )
"May''Wed'1900"

// Lower case 'e' notation is not supported in Excel and instead results in an error when used in this manner.  As it is an error in Excel, it is documented in Excel, C# supports it, and it is generally useful, we will support it. 
>> Text( 1234567.1234567, "0.00e+00" )
"1.23e+06"

>> Text( 1234567.1234567, "0.00e+0" )
"1.23e+6"

>> Text( 1234567.1234567, "0.00\e" )
"1234567.12e"

>> Text( 1234567.1234567, "0.00\e+" )
"1234567.12e+"

>> Text( 1234567.1234567, "0.00""e""" )
"1234567.12e"

>> Text( 1234567.1234567, "0.00""e+""" )
"1234567.12e+"

>> Text( 1234567.1234567, "0000.00e+00" )
"1234.57e+03"

>> Text( 1234567.1234567, "0e+00" )
"1e+06"

>> Text( 1234567.1234567, "#.00e+00" )
"1.23e+06"

>> Text( 1234567.1234567, "####.00e+00" )
"1234.57e+03"

>> Text( 1234567.1234567, "#e+00" )
"1e+06"

>> Text( 1234567.1234567, "#e+00000" )
"1e+00006"

>> Text( 1234567.1234567, "0.00E-00" )
"1.23E06"

>> Text( 1234567.1234567, "0000.00E-00" )
"1234.57E03"

>> Text( 1234567.1234567, "0E-00" )
"1E06"

>> Text( 1234567.1234567, "#.00E-00" )
"1.23E06"

>> Text( 1234567.1234567, "####.00E-00" )
"1234.57E03"

>> Text( 1234567.1234567, "#E-00" )
"1E06"

>> Text( 1234567.1234567, "#E-00000" )
"1E00006"

>> Text( 1234567.1234567, "0.00e-00" )
"1.23e06"

>> Text( 1234567.1234567, "0000.00e-00" )
"1234.57e03"

>> Text( 1234567.1234567, "0e-00" )
"1e06"

>> Text( 1234567.1234567, "#.00e-00" )
"1.23e06"

>> Text( 1234567.1234567, "####.00e-00" )
"1234.57e03"

>> Text( 1234567.1234567, "#e-00" )
"1e06"

>> Text( 1234567.1234567, "#e-00000" )
"1e00006"

// Number of digits.  Without exponent, this should fully expand.
>> Text( 1, "0" )
"1"

>> Text( 10, "0" )
"10"

>> Text( 100, "0" )
"100"

>> Text( 1000, "0" )
"1000"

>> Text( 10000, "0" )
"10000"

>> Text( 100000, "0" )
"100000"

>> Text( 1000000, "0" )
"1000000"

>> Text( 10000000, "0" )
"10000000"

>> Text( 100000000, "0" )
"100000000"

>> Text( 1000000000, "0" )
"1000000000"

>> Text( 10000000000, "0" )
"10000000000"

>> Text( 100000000000, "0" )
"100000000000"

>> Text( 1000000000000, "0" )
"1000000000000"

>> Text( 10000000000000, "0" )
"10000000000000"

>> Text( 100000000000000, "0" )
"100000000000000"

>> Text( 1E+15, "0" )
"1000000000000000"

>> Text( 1E+16, "0" )
"10000000000000000"

>> Text( 1E+17, "0" )
"100000000000000000"

>> Text( 1E+18, "0" )
"1000000000000000000"

>> Text( 1E+19, "0" )
"10000000000000000000"

>> Text( 1E+20, "0" )
"100000000000000000000"

>> Text( 1E+21, "0" )
"1000000000000000000000"

>> Text( 1E+22, "0" )
"10000000000000000000000"

>> Text( 1E+23, "0" )
"100000000000000000000000"

>> Text( 1E+24, "0" )
"1000000000000000000000000"

>> Text( 1E+25, "0" )
"10000000000000000000000000"

>> Text( 1E+26, "0" )
"100000000000000000000000000"

>> Text( 1E+27, "0" )
"1000000000000000000000000000"

>> Text( 1E+28, "0" )
"10000000000000000000000000000"

>> Text( 1, "#" )
"1"

>> Text( 10, "#" )
"10"

>> Text( 100, "#" )
"100"

>> Text( 1000, "#" )
"1000"

>> Text( 10000, "#" )
"10000"

>> Text( 100000, "#" )
"100000"

>> Text( 1000000, "#" )
"1000000"

>> Text( 10000000, "#" )
"10000000"

>> Text( 100000000, "#" )
"100000000"

>> Text( 1000000000, "#" )
"1000000000"

>> Text( 10000000000, "#" )
"10000000000"

>> Text( 100000000000, "#" )
"100000000000"

>> Text( 1000000000000, "#" )
"1000000000000"

>> Text( 10000000000000, "#" )
"10000000000000"

>> Text( 100000000000000, "#" )
"100000000000000"

>> Text( 1E+15, "#" )
"1000000000000000"

>> Text( 1E+16, "#" )
"10000000000000000"

>> Text( 1E+17, "#" )
"100000000000000000"

>> Text( 1E+18, "#" )
"1000000000000000000"

>> Text( 1E+19, "#" )
"10000000000000000000"

>> Text( 1E+20, "#" )
"100000000000000000000"

>> Text( 1E+21, "#" )
"1000000000000000000000"

>> Text( 1E+22, "#" )
"10000000000000000000000"

>> Text( 1E+23, "#" )
"100000000000000000000000"

>> Text( 1E+24, "#" )
"1000000000000000000000000"

>> Text( 1E+25, "#" )
"10000000000000000000000000"

>> Text( 1E+26, "#" )
"100000000000000000000000000"

>> Text( 1E+27, "#" )
"1000000000000000000000000000"

>> Text( 1E+28, "#" )
"10000000000000000000000000000"

// Text of Blank returns Blank
>> Text( Blank() )
Blank()

>> Text( If(1<0,1,Blank()) )
Blank()

>> Text( If(1<0,1,Blank()), "####" )
""

// Text format string has decimal point
>> Text( 123.456, "#.\#\#" )
"123.##"

>> Text( 123.456, "#.\#\##" )
"123.##5"

>> Text( 123.456, "#.\#\##\fz" )
"123.##5fz"

>> Text( 123.456, "#.f\#\##\fz" )
"123.f##5fz"

>> Text( 123.456, "#.##\#\##\fz" )
"123.45##6fz"

>> Text( 123.456, "#.'##'" )
"123.'46'"

>> Text( 123.456, "#.'#''#'" )
"123.'4''6'"

>> Text( 123.456, "#.#'#''#'" )
"123.4'5''6'"

>> Text( 123.456, "#.#'#'\z#'f'" )
"123.4'5'z6'f'"

>> Text( 123.456, "'#.##'" )
"'123.46'"

>> Text( 123.456, "'q#.##'" )
"'q123.46'"

>> Text( 123.456, "#.##'" )
"123.46'"

>> Text( 123.456, "#.""##""" )
"123.##"

>> Text( 123.456, "#.#""##""" )
"123.5##"

>> Text( 123.456, "#.""##""#" )
"123.##5"

>> Text( 123.456, "#.""##""0" )
"123.##5"

>> Text( 123.456, "#." )
"123."

>> Text( 123.456, "#.'f'" )
"123.'f'"

>> Text( 123.456, "#.""\""" )
"123.\"

>> Text( 123.456, "#.0""##""" )
"123.5##"

>> Text( 123.456, "#.00""##""" )
"123.46##"

>> Text( 123.456, "#.#0""##""" )
"123.46##"

>> Text( 123.456, "#.#0""##""0" )
"123.45##6"